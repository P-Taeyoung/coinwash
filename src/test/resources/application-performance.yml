spring:
  application:
    name: coinwash

  datasource:
    url: ${SPRING_DATASOURCE_URL:jdbc:mysql://localhost:3306/coinwash?useSSL=false&allowPublicKeyRetrieval=true&serverTimezone=Asia/Seoul}
    driver-class-name: com.mysql.cj.jdbc.Driver
    username: ${SPRING_DATASOURCE_USERNAME:user}
    password: ${MYSQL_PASSWORD:coinwashmysql1015}
    hikari:
      # 🎯 동시 3000명 기준 최적화
      maximum-pool-size: 300      # 100 → 300 (3000명 * 0.1 = 300)
      minimum-idle: 100           # 50 → 100 (기본 유지)
      connection-timeout: 20000   # 10초 → 20초 (안정성)
      idle-timeout: 300000        # 3분 → 5분 (안정성)
      max-lifetime: 1800000       # 15분 → 30분 (안정성)
      leak-detection-threshold: 60000  # 30초 → 60초 (false positive 방지)

      # 🚀 성능 최적화 추가
      validation-timeout: 3000    # 검증 타임아웃
      initialization-fail-timeout: 1  # 빠른 실패
      isolate-internal-queries: false # 내부 쿼리 격리 해제 (성능 향상)

  jpa:
    show-sql: false
    hibernate:
      ddl-auto: validate
    properties:
      hibernate:
        # 🚀 JPA 성능 최적화
        jdbc.batch_size: 50           # 배치 처리
        order_inserts: true           # 삽입 순서 최적화
        order_updates: true           # 업데이트 순서 최적화
        jdbc.batch_versioned_data: true

  jwt:
    secret: vmfhaltmskdlstkfkdgodyroqkfwkdbalroqkfwkdbalaaaaaaaaaaaaaaaabbbbb

  data:
    redis:
      host: ${REDIS_HOST:localhost}
      port: ${REDIS_PORT:6379}
      password: ${REDIS_PASSWORD:coinwashredis1015}
      timeout: 2000ms             # 1초 → 2초 (안정성)
      connect-timeout: 3000ms     # 2초 → 3초 (안정성)
      lettuce:
        shutdown-timeout: 2000ms  # 1초 → 2초
        pool:
          # 🎯 Redis 커넥션 풀 최적화 (과도한 설정 조정)
          max-active: 500         # 2000 → 500 (충분함)
          max-idle: 100           # 500 → 100 (메모리 절약)
          min-idle: 20            # 100 → 20 (메모리 절약)
          max-wait: 3000ms        # 5초 → 3초 (적절한 대기)

          # 🔧 커넥션 관리 최적화
          test-on-borrow: false
          test-on-return: false
          test-while-idle: true
          time-between-eviction-runs: 30000ms  # 10초 → 30초 (CPU 절약)
          min-evictable-idle-time: 60000ms     # 30초 → 60초 (안정성)

kakao:
  api:
    key: ${KAKAO_API_KEY:70a4efa03827692eeda13eea1c434f88}

server:
  # 🚀 Tomcat 최적화 (가장 중요!)
  tomcat:
    threads:
      max: 500                    # 200 → 500 (동시 3000명 처리)
      min-spare: 50               # 10 → 50 (기본 스레드 확보)
    max-connections: 10000        # 8192 → 10000 (여유 확보)
    connection-timeout: 30000     # 20초 → 30초 (안정성)
    accept-count: 200             # 대기 큐 크기 (추가)
    max-http-form-post-size: 2MB  # POST 크기 제한 (추가)

    # 🔧 추가 최적화
    processor-cache: 200          # 프로세서 캐시
    max-keep-alive-requests: 100  # Keep-Alive 요청 수

# 🚀 JVM 최적화 (추가 권장사항)
logging:
  level:
    com.zaxxer.hikari: INFO       # HikariCP 로그 레벨
    org.springframework.web: INFO # 웹 로그 레벨